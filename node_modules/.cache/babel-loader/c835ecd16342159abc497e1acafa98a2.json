{"ast":null,"code":"import _toConsumableArray from\"C:\\\\Users\\\\kgrob\\\\Documents\\\\Proyectos de programaci\\xF3n\\\\OrgBoat\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"C:\\\\Users\\\\kgrob\\\\Documents\\\\Proyectos de programaci\\xF3n\\\\OrgBoat\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import ChatHeader from\"./ChatHeader\";import ChatFooter from\"./ChatFooter\";import ManAvatar3 from\"../../assets/img/man_avatar3.jpg\";import{selectedChat}from\"../Sidebars/Chats/Data\";import PerfectScrollbar from\"react-perfect-scrollbar\";import UnselectedChat from\"../../assets/img/unselected-chat.svg\";function Chat(){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),inputMsg=_useState2[0],setInputMsg=_useState2[1];var _useState3=useState(selectedChat),_useState4=_slicedToArray(_useState3,2),messages=_useState4[0],setMessages=_useState4[1];var _useState5=useState(),_useState6=_slicedToArray(_useState5,2),scrollEl=_useState6[0],setScrollEl=_useState6[1];useEffect(function(){if(scrollEl){scrollEl.scrollTop=scrollEl.scrollHeight;}},[scrollEl]);var handleSubmit=function handleSubmit(newValue){setMessages(function(prevState){return[].concat(_toConsumableArray(prevState),[newValue]);});setTimeout(function(){if(scrollEl){scrollEl.scrollTop=scrollEl.scrollHeight;}},200);setInputMsg(\"\");setTimeout(function(){setMessages(function(prevState){return[].concat(_toConsumableArray(prevState),[{name:'Byrom Guittet',avatar:/*#__PURE__*/React.createElement(\"figure\",{className:\"avatar\"},/*#__PURE__*/React.createElement(\"img\",{src:ManAvatar3,className:\"rounded-circle\",alt:\"avatar\"})),text:'I sent you all the files. Good luck with ğŸ˜ƒ',date:'2 seconds ago'}]);});setTimeout(function(){if(scrollEl){scrollEl.scrollTop=scrollEl.scrollHeight;}},200);},1000);};var handleChange=function handleChange(newValue){setInputMsg(newValue);};var MessagesView=function MessagesView(props){var message=props.message;if(message.type==='divider'){return/*#__PURE__*/React.createElement(\"div\",{className:\"message-item messages-divider sticky-top\",\"data-label\":message.text});}else{return/*#__PURE__*/React.createElement(\"div\",{className:\"message-item \"+message.type},/*#__PURE__*/React.createElement(\"div\",{className:\"message-avatar\"},message.avatar,/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h5\",null,message.name),/*#__PURE__*/React.createElement(\"div\",{className:\"time\"},message.date,message.type?/*#__PURE__*/React.createElement(\"i\",{className:\"ti-double-check text-info\"}):null))),message.media?message.media:/*#__PURE__*/React.createElement(\"div\",{className:\"message-content\"},message.text));}};return/*#__PURE__*/React.createElement(\"div\",{className:\"chat\"},/*#__PURE__*/React.createElement(ChatHeader,null),/*#__PURE__*/React.createElement(PerfectScrollbar,{containerRef:function containerRef(ref){return setScrollEl(ref);}},/*#__PURE__*/React.createElement(\"div\",{className:\"chat-body\"},/*#__PURE__*/React.createElement(\"div\",{className:\"messages\"},messages.map(function(message,i){return/*#__PURE__*/React.createElement(MessagesView,{message:message,key:i});})))),/*#__PURE__*/React.createElement(ChatFooter,{onSubmit:handleSubmit,onChange:handleChange,inputMsg:inputMsg}));}export default Chat;","map":{"version":3,"sources":["C:/Users/kgrob/Documents/Proyectos de programaciÃ³n/OrgBoat/src/App/Partials/Chat.js"],"names":["React","useEffect","useState","ChatHeader","ChatFooter","ManAvatar3","selectedChat","PerfectScrollbar","Chat","inputMsg","setInputMsg","messages","setMessages","scrollEl","setScrollEl","scrollTop","scrollHeight","handleSubmit","newValue","prevState","setTimeout","name","avatar","text","date","handleChange","MessagesView","props","message","type","media","ref","map","i"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react'\r\nimport ChatHeader from \"./ChatHeader\"\r\nimport ChatFooter from \"./ChatFooter\"\r\nimport ManAvatar3 from \"../../assets/img/man_avatar3.jpg\"\r\nimport {selectedChat} from \"../Sidebars/Chats/Data\"\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\"\r\nimport UnselectedChat from '../../assets/img/unselected-chat.svg'\r\n\r\nfunction Chat() {\r\n\r\n    const [inputMsg, setInputMsg] = useState('');\r\n\r\n    const [messages, setMessages] = useState(selectedChat);\r\n\r\n    const [scrollEl, setScrollEl] = useState();\r\n\r\n    useEffect(() => {\r\n        if (scrollEl) {\r\n            scrollEl.scrollTop = scrollEl.scrollHeight;\r\n        }\r\n    }, [scrollEl]);\r\n\r\n    const handleSubmit = (newValue) => {\r\n        setMessages(prevState => {\r\n            return [\r\n                ...prevState,\r\n                newValue\r\n            ];\r\n        });\r\n\r\n        setTimeout(function () {\r\n            if (scrollEl) {\r\n                scrollEl.scrollTop = scrollEl.scrollHeight;\r\n            }\r\n        }, 200);\r\n\r\n        setInputMsg(\"\");\r\n\r\n        setTimeout(() => {\r\n\r\n            setMessages(prevState => {\r\n                return [\r\n                    ...prevState,\r\n                    {\r\n                        name: 'Byrom Guittet',\r\n                        avatar: <figure className=\"avatar\">\r\n                            <img src={ManAvatar3} className=\"rounded-circle\" alt=\"avatar\"/>\r\n                        </figure>,\r\n                        text: 'I sent you all the files. Good luck with ğŸ˜ƒ',\r\n                        date: '2 seconds ago',\r\n                    }\r\n                ];\r\n            });\r\n\r\n            setTimeout(function () {\r\n                if (scrollEl) {\r\n                    scrollEl.scrollTop = scrollEl.scrollHeight;\r\n                }\r\n            }, 200)\r\n\r\n        }, 1000);\r\n    };\r\n\r\n    const handleChange = (newValue) => {\r\n        setInputMsg(newValue);\r\n    };\r\n\r\n    const MessagesView = (props) => {\r\n        const {message} = props;\r\n\r\n        if (message.type === 'divider') {\r\n            return <div className=\"message-item messages-divider sticky-top\" data-label={message.text}></div>\r\n        } else {\r\n            return <div className={\"message-item \" + message.type}>\r\n                <div className=\"message-avatar\">\r\n                    {message.avatar}\r\n                    <div>\r\n                        <h5>{message.name}</h5>\r\n                        <div className=\"time\">\r\n                            {message.date}\r\n                            {message.type ? <i className=\"ti-double-check text-info\"></i> : null}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {\r\n                    message.media\r\n                        ?\r\n                        message.media\r\n                        :\r\n                        <div className=\"message-content\">\r\n                            {message.text}\r\n                        </div>\r\n                }\r\n            </div>\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"chat\">\r\n            <ChatHeader/>\r\n            <PerfectScrollbar containerRef={ref => setScrollEl(ref)}>\r\n                <div className=\"chat-body\">\r\n                    <div className=\"messages\">\r\n                        {\r\n                            messages.map((message, i) => <MessagesView message={message} key={i}/>)\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </PerfectScrollbar>\r\n            <ChatFooter onSubmit={handleSubmit} onChange={handleChange} inputMsg={inputMsg}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chat\r\n"]},"metadata":{},"sourceType":"module"}