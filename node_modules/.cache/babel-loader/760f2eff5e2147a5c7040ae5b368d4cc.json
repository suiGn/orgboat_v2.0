{"ast":null,"code":"import _toConsumableArray from\"C:\\\\Users\\\\kgrob\\\\Documents\\\\Proyectos de programaci\\xF3n\\\\OrgBoat\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"C:\\\\Users\\\\kgrob\\\\Documents\\\\Proyectos de programaci\\xF3n\\\\OrgBoat\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import socketIOClient from\"socket.io-client\";import ChatBodyNoMessage from\"./ChatBodyNoMessage\";import ChatBodyMessage from\"./ChatBodyMessage\";import ChatSideBar from\"./ChatSidebar\";import ReactDOM from\"react-dom\";import $ from\"jquery\";var ENDPOINT=\"http://localhost:5000\";function ChatBody(_ref){var my_uid=_ref.my_uid,clicked=_ref.clicked,SendMessage=_ref.SendMessage;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),chatMessages=_useState2[0],setChatMessages=_useState2[1];var messagesArray;var currentPage=0;var socket=socketIOClient(ENDPOINT);useEffect(function(){if(clicked!=0){currentPage=currentPage+1;socket.emit(\"get messages\",{id:clicked,page:currentPage});}socket.on(\"retrieve messages\",function(response){// setChatMessages((chatMessages) => [...chatMessages, response.messages]);\nsetChatMessages(response.messages);socket.emit(\"get chats\");});},[clicked]);useEffect(function(){socket.on(\"chat message\",function(response){setChatMessages(function(chatMessages){return[response].concat(_toConsumableArray(chatMessages));});// socket.on(\"retrieve messages\", (response) => {\n//   setChatMessages((chatMessages) => [...chatMessages, response.messages]);\n//   socket.emit(\"get chats\");\n//   console.log(\"messages\", response);\n// });\nsocket.emit(\"get chats\");});},[]);// function SendMessage(event, newMessage, chat_uid) {\n//   event.preventDefault();\n//   const socket = socketIOClient(ENDPOINT);\n//   if (newMessage.length > 0) {\n//     socket.emit(\"chat message\", { chat: chat_uid, message: newMessage });\n//     socket.emit(\"get chats\");\n//     socket.emit(\"get messages\", { id: chat_uid, page: currentPage });\n//     // setnewMessage(\"\");\n//   }\n// }\nmessagesArray=chatMessages;// messages = response.chats;\n// my_uid = response.my_uid;\nconsole.log(\"messagesArray\",messagesArray);return/*#__PURE__*/React.createElement(\"div\",{className:\"chat\"},messagesArray&&messagesArray.length>0?/*#__PURE__*/React.createElement(ChatBodyMessage,{messages:messagesArray,chat_uid:clicked,my_uid:my_uid,page:currentPage,SendMessage:SendMessage}):/*#__PURE__*/React.createElement(ChatBodyNoMessage,null));}export default ChatBody;","map":{"version":3,"sources":["C:/Users/kgrob/Documents/Proyectos de programaciÃ³n/OrgBoat/src/components/ChatBody.js"],"names":["React","useState","useEffect","socketIOClient","ChatBodyNoMessage","ChatBodyMessage","ChatSideBar","ReactDOM","$","ENDPOINT","ChatBody","my_uid","clicked","SendMessage","chatMessages","setChatMessages","messagesArray","currentPage","socket","emit","id","page","on","response","messages","console","log","length"],"mappings":"oYAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,cAAP,KAA2B,kBAA3B,CACA,MAAOC,CAAAA,iBAAP,KAA8B,qBAA9B,CACA,MAAOC,CAAAA,eAAP,KAA4B,mBAA5B,CACA,MAAOC,CAAAA,WAAP,KAAwB,eAAxB,CACA,MAAOC,CAAAA,QAAP,KAAqB,WAArB,CACA,MAAOC,CAAAA,CAAP,KAAc,QAAd,CACA,GAAMC,CAAAA,QAAQ,CAAG,uBAAjB,CAEA,QAASC,CAAAA,QAAT,MAAoD,IAAhCC,CAAAA,MAAgC,MAAhCA,MAAgC,CAAxBC,OAAwB,MAAxBA,OAAwB,CAAfC,WAAe,MAAfA,WAAe,eACVZ,QAAQ,CAAC,EAAD,CADE,wCAC3Ca,YAD2C,eAC7BC,eAD6B,eAElD,GAAIC,CAAAA,aAAJ,CACA,GAAIC,CAAAA,WAAW,CAAG,CAAlB,CACA,GAAMC,CAAAA,MAAM,CAAGf,cAAc,CAACM,QAAD,CAA7B,CACAP,SAAS,CAAC,UAAM,CACd,GAAIU,OAAO,EAAI,CAAf,CAAkB,CAChBK,WAAW,CAAGA,WAAW,CAAG,CAA5B,CACAC,MAAM,CAACC,IAAP,CAAY,cAAZ,CAA4B,CAAEC,EAAE,CAAER,OAAN,CAAeS,IAAI,CAAEJ,WAArB,CAA5B,EACD,CACDC,MAAM,CAACI,EAAP,CAAU,mBAAV,CAA+B,SAACC,QAAD,CAAc,CAC3C;AACAR,eAAe,CAACQ,QAAQ,CAACC,QAAV,CAAf,CACAN,MAAM,CAACC,IAAP,CAAY,WAAZ,EACD,CAJD,EAKD,CAVQ,CAUN,CAACP,OAAD,CAVM,CAAT,CAYAV,SAAS,CAAC,UAAM,CACdgB,MAAM,CAACI,EAAP,CAAU,cAAV,CAA0B,SAACC,QAAD,CAAc,CACtCR,eAAe,CAAC,SAACD,YAAD,SAAmBS,QAAnB,4BAAgCT,YAAhC,IAAD,CAAf,CACA;AACA;AACA;AACA;AACA;AACAI,MAAM,CAACC,IAAP,CAAY,WAAZ,EACD,CARD,EASD,CAVQ,CAUN,EAVM,CAAT,CAYA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAH,aAAa,CAAGF,YAAhB,CACA;AACA;AACAW,OAAO,CAACC,GAAR,CAAY,eAAZ,CAA6BV,aAA7B,EACA,mBACE,2BAAK,SAAS,CAAC,MAAf,EACGA,aAAa,EAAIA,aAAa,CAACW,MAAd,CAAuB,CAAxC,cACC,oBAAC,eAAD,EACE,QAAQ,CAAEX,aADZ,CAEE,QAAQ,CAAEJ,OAFZ,CAGE,MAAM,CAAED,MAHV,CAIE,IAAI,CAAEM,WAJR,CAKE,WAAW,CAAEJ,WALf,EADD,cASC,oBAAC,iBAAD,MAVJ,CADF,CAeD,CAED,cAAeH,CAAAA,QAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport socketIOClient from \"socket.io-client\";\r\nimport ChatBodyNoMessage from \"./ChatBodyNoMessage\";\r\nimport ChatBodyMessage from \"./ChatBodyMessage\";\r\nimport ChatSideBar from \"./ChatSidebar\";\r\nimport ReactDOM from \"react-dom\";\r\nimport $ from \"jquery\";\r\nconst ENDPOINT = \"http://localhost:5000\";\r\n\r\nfunction ChatBody({ my_uid, clicked, SendMessage }) {\r\n  const [chatMessages, setChatMessages] = useState([]);\r\n  let messagesArray;\r\n  let currentPage = 0;\r\n  const socket = socketIOClient(ENDPOINT);\r\n  useEffect(() => {\r\n    if (clicked != 0) {\r\n      currentPage = currentPage + 1;\r\n      socket.emit(\"get messages\", { id: clicked, page: currentPage });\r\n    }\r\n    socket.on(\"retrieve messages\", (response) => {\r\n      // setChatMessages((chatMessages) => [...chatMessages, response.messages]);\r\n      setChatMessages(response.messages);\r\n      socket.emit(\"get chats\");\r\n    });\r\n  }, [clicked]);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"chat message\", (response) => {\r\n      setChatMessages((chatMessages) => [response, ...chatMessages]);\r\n      // socket.on(\"retrieve messages\", (response) => {\r\n      //   setChatMessages((chatMessages) => [...chatMessages, response.messages]);\r\n      //   socket.emit(\"get chats\");\r\n      //   console.log(\"messages\", response);\r\n      // });\r\n      socket.emit(\"get chats\");\r\n    });\r\n  }, []);\r\n\r\n  // function SendMessage(event, newMessage, chat_uid) {\r\n  //   event.preventDefault();\r\n\r\n  //   const socket = socketIOClient(ENDPOINT);\r\n  //   if (newMessage.length > 0) {\r\n  //     socket.emit(\"chat message\", { chat: chat_uid, message: newMessage });\r\n  //     socket.emit(\"get chats\");\r\n  //     socket.emit(\"get messages\", { id: chat_uid, page: currentPage });\r\n  //     // setnewMessage(\"\");\r\n  //   }\r\n  // }\r\n\r\n  messagesArray = chatMessages;\r\n  // messages = response.chats;\r\n  // my_uid = response.my_uid;\r\n  console.log(\"messagesArray\", messagesArray);\r\n  return (\r\n    <div className=\"chat\">\r\n      {messagesArray && messagesArray.length > 0 ? (\r\n        <ChatBodyMessage\r\n          messages={messagesArray}\r\n          chat_uid={clicked}\r\n          my_uid={my_uid}\r\n          page={currentPage}\r\n          SendMessage={SendMessage}\r\n        />\r\n      ) : (\r\n        <ChatBodyNoMessage />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatBody;\r\n"]},"metadata":{},"sourceType":"module"}