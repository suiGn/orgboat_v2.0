{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\kgrob\\\\Documents\\\\Proyectos de programaci\\xF3n\\\\OrgBoat\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useEffect,useRef,useState}from'react';import{useDispatch}from\"react-redux\";import*as FeatherIcon from'react-feather';import{Tooltip}from'reactstrap';import'react-perfect-scrollbar/dist/css/styles.css';import PerfectScrollbar from'react-perfect-scrollbar';import AddGroupModal from\"../../Modals/AddGroupModal\";import ChatsDropdown from\"./ChatsDropdown\";import{sidebarAction}from\"../../../Store/Actions/sidebarAction\";import{chatLists}from\"./Data\";import{mobileSidebarAction}from\"../../../Store/Actions/mobileSidebarAction\";function Index(){useEffect(function(){inputRef.current.focus();});var dispatch=useDispatch();var inputRef=useRef();var _useState=useState(false),_useState2=_slicedToArray(_useState,2),tooltipOpen=_useState2[0],setTooltipOpen=_useState2[1];var toggle=function toggle(){return setTooltipOpen(!tooltipOpen);};var mobileSidebarClose=function mobileSidebarClose(){dispatch(mobileSidebarAction(false));document.body.classList.remove('navigation-open');};var ChatListView=function ChatListView(props){var chat=props.chat;return/*#__PURE__*/React.createElement(\"li\",{className:\"list-group-item \"+(chat.selected?'open-chat':'')},chat.avatar,/*#__PURE__*/React.createElement(\"div\",{className:\"users-list-body\"},/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h5\",{className:chat.unread_messages?'text-primary':''},chat.name),chat.text),/*#__PURE__*/React.createElement(\"div\",{className:\"users-list-action\"},chat.unread_messages?/*#__PURE__*/React.createElement(\"div\",{className:\"new-message-count\"},chat.unread_messages):'',/*#__PURE__*/React.createElement(\"small\",{className:chat.unread_messages?'text-primary':'text-muted'},chat.date),/*#__PURE__*/React.createElement(\"div\",{className:\"action-toggle\"},/*#__PURE__*/React.createElement(ChatsDropdown,null)))));};return/*#__PURE__*/React.createElement(\"div\",{className:\"sidebar active\"},/*#__PURE__*/React.createElement(\"header\",null,/*#__PURE__*/React.createElement(\"span\",null,\"Chats\"),/*#__PURE__*/React.createElement(\"ul\",{className:\"list-inline\"},/*#__PURE__*/React.createElement(\"li\",{className:\"list-inline-item\"},/*#__PURE__*/React.createElement(AddGroupModal,null)),/*#__PURE__*/React.createElement(\"li\",{className:\"list-inline-item\"},/*#__PURE__*/React.createElement(\"button\",{onClick:function onClick(){return dispatch(sidebarAction('Friends'));},className:\"btn btn-outline-light\",id:\"Tooltip-New-Chat\"},/*#__PURE__*/React.createElement(FeatherIcon.PlusCircle,null)),/*#__PURE__*/React.createElement(Tooltip,{placement:\"bottom\",isOpen:tooltipOpen,target:\"Tooltip-New-Chat\",toggle:toggle},\"New chat\")),/*#__PURE__*/React.createElement(\"li\",{className:\"list-inline-item d-xl-none d-inline\"},/*#__PURE__*/React.createElement(\"button\",{onClick:mobileSidebarClose,className:\"btn btn-outline-light text-danger sidebar-close\"},/*#__PURE__*/React.createElement(FeatherIcon.X,null))))),/*#__PURE__*/React.createElement(\"form\",null,/*#__PURE__*/React.createElement(\"input\",{type:\"text\",className:\"form-control\",placeholder:\"Search chats\",ref:inputRef})),/*#__PURE__*/React.createElement(\"div\",{className:\"sidebar-body\"},/*#__PURE__*/React.createElement(PerfectScrollbar,null,/*#__PURE__*/React.createElement(\"ul\",{className:\"list-group list-group-flush\"},chatLists.map(function(chat,i){return/*#__PURE__*/React.createElement(ChatListView,{chat:chat,key:i});})))));}export default Index;","map":{"version":3,"sources":["C:/Users/kgrob/Documents/Proyectos de programaciÃ³n/OrgBoat/src/App/Sidebars/Chats/index.js"],"names":["React","useEffect","useRef","useState","useDispatch","FeatherIcon","Tooltip","PerfectScrollbar","AddGroupModal","ChatsDropdown","sidebarAction","chatLists","mobileSidebarAction","Index","inputRef","current","focus","dispatch","tooltipOpen","setTooltipOpen","toggle","mobileSidebarClose","document","body","classList","remove","ChatListView","props","chat","selected","avatar","unread_messages","name","text","date","map","i"],"mappings":"8LAAA,MAAOA,CAAAA,KAAP,EAAeC,SAAf,CAA0BC,MAA1B,CAAkCC,QAAlC,KAAiD,OAAjD,CACA,OAAQC,WAAR,KAA0B,aAA1B,CACA,MAAO,GAAKC,CAAAA,WAAZ,KAA6B,eAA7B,CACA,OAAQC,OAAR,KAAsB,YAAtB,CACA,MAAO,6CAAP,CACA,MAAOC,CAAAA,gBAAP,KAA6B,yBAA7B,CACA,MAAOC,CAAAA,aAAP,KAA0B,4BAA1B,CACA,MAAOC,CAAAA,aAAP,KAA0B,iBAA1B,CACA,OAAQC,aAAR,KAA4B,sCAA5B,CACA,OAAQC,SAAR,KAAwB,QAAxB,CACA,OAAQC,mBAAR,KAAkC,4CAAlC,CAEA,QAASC,CAAAA,KAAT,EAAiB,CAEbZ,SAAS,CAAC,UAAM,CACZa,QAAQ,CAACC,OAAT,CAAiBC,KAAjB,GACH,CAFQ,CAAT,CAIA,GAAMC,CAAAA,QAAQ,CAAGb,WAAW,EAA5B,CAEA,GAAMU,CAAAA,QAAQ,CAAGZ,MAAM,EAAvB,CARa,cAUyBC,QAAQ,CAAC,KAAD,CAVjC,wCAUNe,WAVM,eAUOC,cAVP,eAYb,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,SAAMD,CAAAA,cAAc,CAAC,CAACD,WAAF,CAApB,EAAf,CAEA,GAAMG,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,EAAM,CAC7BJ,QAAQ,CAACL,mBAAmB,CAAC,KAAD,CAApB,CAAR,CACAU,QAAQ,CAACC,IAAT,CAAcC,SAAd,CAAwBC,MAAxB,CAA+B,iBAA/B,EACH,CAHD,CAKA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,KAAD,CAAW,IACrBC,CAAAA,IADqB,CACbD,KADa,CACrBC,IADqB,CAG5B,mBAAO,0BAAI,SAAS,CAAE,oBAAsBA,IAAI,CAACC,QAAL,CAAgB,WAAhB,CAA8B,EAApD,CAAf,EACFD,IAAI,CAACE,MADH,cAEH,2BAAK,SAAS,CAAC,iBAAf,eACI,4CACI,0BAAI,SAAS,CAAEF,IAAI,CAACG,eAAL,CAAuB,cAAvB,CAAwC,EAAvD,EAA4DH,IAAI,CAACI,IAAjE,CADJ,CAEKJ,IAAI,CAACK,IAFV,CADJ,cAKI,2BAAK,SAAS,CAAC,mBAAf,EACKL,IAAI,CAACG,eAAL,cAAuB,2BAAK,SAAS,CAAC,mBAAf,EAAoCH,IAAI,CAACG,eAAzC,CAAvB,CAAyF,EAD9F,cAEI,6BAAO,SAAS,CAAEH,IAAI,CAACG,eAAL,CAAuB,cAAvB,CAAwC,YAA1D,EAAyEH,IAAI,CAACM,IAA9E,CAFJ,cAGI,2BAAK,SAAS,CAAC,eAAf,eACI,oBAAC,aAAD,MADJ,CAHJ,CALJ,CAFG,CAAP,CAgBH,CAnBD,CAqBA,mBACI,2BAAK,SAAS,CAAC,gBAAf,eACI,+CACI,wCADJ,cAEI,0BAAI,SAAS,CAAC,aAAd,eACI,0BAAI,SAAS,CAAC,kBAAd,eACI,oBAAC,aAAD,MADJ,CADJ,cAII,0BAAI,SAAS,CAAC,kBAAd,eACI,8BAAQ,OAAO,CAAE,yBAAMjB,CAAAA,QAAQ,CAACP,aAAa,CAAC,SAAD,CAAd,CAAd,EAAjB,CAA2D,SAAS,CAAC,uBAArE,CACQ,EAAE,CAAC,kBADX,eAEI,oBAAC,WAAD,CAAa,UAAb,MAFJ,CADJ,cAKI,oBAAC,OAAD,EACI,SAAS,CAAC,QADd,CAEI,MAAM,CAAEQ,WAFZ,CAGI,MAAM,CAAE,kBAHZ,CAII,MAAM,CAAEE,MAJZ,aALJ,CAJJ,cAiBI,0BAAI,SAAS,CAAC,qCAAd,eACI,8BAAQ,OAAO,CAAEC,kBAAjB,CACQ,SAAS,CAAC,iDADlB,eAEI,oBAAC,WAAD,CAAa,CAAb,MAFJ,CADJ,CAjBJ,CAFJ,CADJ,cA4BI,6CACI,6BAAO,IAAI,CAAC,MAAZ,CAAmB,SAAS,CAAC,cAA7B,CAA4C,WAAW,CAAC,cAAxD,CAAuE,GAAG,CAAEP,QAA5E,EADJ,CA5BJ,cA+BI,2BAAK,SAAS,CAAC,cAAf,eACI,oBAAC,gBAAD,mBACI,0BAAI,SAAS,CAAC,6BAAd,EAEQH,SAAS,CAACwB,GAAV,CAAc,SAACP,IAAD,CAAOQ,CAAP,qBAAa,oBAAC,YAAD,EAAc,IAAI,CAAER,IAApB,CAA0B,GAAG,CAAEQ,CAA/B,EAAb,EAAd,CAFR,CADJ,CADJ,CA/BJ,CADJ,CA2CH,CAED,cAAevB,CAAAA,KAAf","sourcesContent":["import React, {useEffect, useRef, useState} from 'react'\r\nimport {useDispatch} from \"react-redux\"\r\nimport * as FeatherIcon from 'react-feather'\r\nimport {Tooltip} from 'reactstrap'\r\nimport 'react-perfect-scrollbar/dist/css/styles.css'\r\nimport PerfectScrollbar from 'react-perfect-scrollbar'\r\nimport AddGroupModal from \"../../Modals/AddGroupModal\"\r\nimport ChatsDropdown from \"./ChatsDropdown\"\r\nimport {sidebarAction} from \"../../../Store/Actions/sidebarAction\"\r\nimport {chatLists} from \"./Data\";\r\nimport {mobileSidebarAction} from \"../../../Store/Actions/mobileSidebarAction\";\r\n\r\nfunction Index() {\r\n\r\n    useEffect(() => {\r\n        inputRef.current.focus();\r\n    });\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const inputRef = useRef();\r\n\r\n    const [tooltipOpen, setTooltipOpen] = useState(false);\r\n\r\n    const toggle = () => setTooltipOpen(!tooltipOpen);\r\n\r\n    const mobileSidebarClose = () => {\r\n        dispatch(mobileSidebarAction(false));\r\n        document.body.classList.remove('navigation-open');\r\n    };\r\n\r\n    const ChatListView = (props) => {\r\n        const {chat} = props;\r\n\r\n        return <li className={\"list-group-item \" + (chat.selected ? 'open-chat' : '')}>\r\n            {chat.avatar}\r\n            <div className=\"users-list-body\">\r\n                <div>\r\n                    <h5 className={chat.unread_messages ? 'text-primary' : ''}>{chat.name}</h5>\r\n                    {chat.text}\r\n                </div>\r\n                <div className=\"users-list-action\">\r\n                    {chat.unread_messages ? <div className=\"new-message-count\">{chat.unread_messages}</div> : ''}\r\n                    <small className={chat.unread_messages ? 'text-primary' : 'text-muted'}>{chat.date}</small>\r\n                    <div className=\"action-toggle\">\r\n                        <ChatsDropdown/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </li>\r\n    };\r\n\r\n    return (\r\n        <div className=\"sidebar active\">\r\n            <header>\r\n                <span>Chats</span>\r\n                <ul className=\"list-inline\">\r\n                    <li className=\"list-inline-item\">\r\n                        <AddGroupModal/>\r\n                    </li>\r\n                    <li className=\"list-inline-item\">\r\n                        <button onClick={() => dispatch(sidebarAction('Friends'))} className=\"btn btn-outline-light\"\r\n                                id=\"Tooltip-New-Chat\">\r\n                            <FeatherIcon.PlusCircle/>\r\n                        </button>\r\n                        <Tooltip\r\n                            placement=\"bottom\"\r\n                            isOpen={tooltipOpen}\r\n                            target={\"Tooltip-New-Chat\"}\r\n                            toggle={toggle}>\r\n                            New chat\r\n                        </Tooltip>\r\n                    </li>\r\n                    <li className=\"list-inline-item d-xl-none d-inline\">\r\n                        <button onClick={mobileSidebarClose}\r\n                                className=\"btn btn-outline-light text-danger sidebar-close\">\r\n                            <FeatherIcon.X/>\r\n                        </button>\r\n                    </li>\r\n                </ul>\r\n            </header>\r\n            <form>\r\n                <input type=\"text\" className=\"form-control\" placeholder=\"Search chats\" ref={inputRef}/>\r\n            </form>\r\n            <div className=\"sidebar-body\">\r\n                <PerfectScrollbar>\r\n                    <ul className=\"list-group list-group-flush\">\r\n                        {\r\n                            chatLists.map((chat, i) => <ChatListView chat={chat} key={i}/>)\r\n                        }\r\n                    </ul>\r\n                </PerfectScrollbar>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Index\r\n"]},"metadata":{},"sourceType":"module"}