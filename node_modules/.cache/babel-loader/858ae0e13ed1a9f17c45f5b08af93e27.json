{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import socketIOClient from\"socket.io-client\";import ChatBodyNoMessage from\"./ChatBodyNoMessage\";import ChatBodyMessage from\"./ChatBodyMessage\";import ChatSideBar from\"./ChatSidebar\";import ReactDOM from\"react-dom\";import $ from\"jquery\";var ENDPOINT=\"http://localhost:5000\";function ChatBody(_ref){var messages=_ref.messages,my_uid=_ref.my_uid,clicked=_ref.clicked,SendMessage=_ref.SendMessage;// const [chatMessages, setChatMessages] = useState([]);\nvar messagesArray;var currentPage=0;console.log(clicked);// useEffect(() => {\n//   if (clicked != 0) {\n//     const socket = socketIOClient(ENDPOINT);\n//     console.log(\"uid\", clicked);\n//     socket.on(\"retrieve messages\", (response) => {\n//       setChatMessages((chatMessages) => [...chatMessages, response]);\n//       socket.emit(\"get chats\");\n//       console.log(\"messages\", response);\n//     });\n//     currentPage = currentPage + 1;\n//     socket.emit(\"get messages\", { id: clicked, page: currentPage });\n//   }\n// }, [clicked]);\n// function SendMessage(event, newMessage, chat_uid) {\n//   event.preventDefault();\n//   const socket = socketIOClient(ENDPOINT);\n//   if (newMessage.length > 0) {\n//     socket.emit(\"chat message\", { chat: chat_uid, message: newMessage });\n//     socket.emit(\"get chats\");\n//     socket.emit(\"get messages\", { id: chat_uid, page: currentPage });\n//     // setnewMessage(\"\");\n//   }\n// }\nmessagesArray=messages;// messages = response.chats;\n// my_uid = response.my_uid;\n// console.log(\"Respuesta\", response);\nreturn/*#__PURE__*/React.createElement(\"div\",{className:\"chat\"},messagesArray[messagesArray.length-1]&&messagesArray[messagesArray.length-1].messages&&messagesArray[messagesArray.length-1].messages.length>0?/*#__PURE__*/React.createElement(ChatBodyMessage,{messages:messagesArray[messagesArray.length-1].messages,chat_uid:clicked,my_uid:my_uid,page:currentPage,SendMessage:SendMessage}):/*#__PURE__*/React.createElement(ChatBodyNoMessage,null));}export default ChatBody;","map":{"version":3,"sources":["C:/Users/kgrob/Documents/Proyectos de programaciÃ³n/OrgBoat/src/components/ChatBody.js"],"names":["React","useState","useEffect","socketIOClient","ChatBodyNoMessage","ChatBodyMessage","ChatSideBar","ReactDOM","$","ENDPOINT","ChatBody","messages","my_uid","clicked","SendMessage","messagesArray","currentPage","console","log","length"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,cAAP,KAA2B,kBAA3B,CACA,MAAOC,CAAAA,iBAAP,KAA8B,qBAA9B,CACA,MAAOC,CAAAA,eAAP,KAA4B,mBAA5B,CACA,MAAOC,CAAAA,WAAP,KAAwB,eAAxB,CACA,MAAOC,CAAAA,QAAP,KAAqB,WAArB,CACA,MAAOC,CAAAA,CAAP,KAAc,QAAd,CACA,GAAMC,CAAAA,QAAQ,CAAG,uBAAjB,CAEA,QAASC,CAAAA,QAAT,MAA8D,IAA1CC,CAAAA,QAA0C,MAA1CA,QAA0C,CAAhCC,MAAgC,MAAhCA,MAAgC,CAAxBC,OAAwB,MAAxBA,OAAwB,CAAfC,WAAe,MAAfA,WAAe,CAC5D;AACA,GAAIC,CAAAA,aAAJ,CACA,GAAIC,CAAAA,WAAW,CAAG,CAAlB,CAEAC,OAAO,CAACC,GAAR,CAAYL,OAAZ,EACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAE,aAAa,CAAGJ,QAAhB,CACA;AACA;AACA;AACA,mBACE,2BAAK,SAAS,CAAC,MAAf,EACGI,aAAa,CAACA,aAAa,CAACI,MAAd,CAAuB,CAAxB,CAAb,EACDJ,aAAa,CAACA,aAAa,CAACI,MAAd,CAAuB,CAAxB,CAAb,CAAwCR,QADvC,EAEDI,aAAa,CAACA,aAAa,CAACI,MAAd,CAAuB,CAAxB,CAAb,CAAwCR,QAAxC,CAAiDQ,MAAjD,CAA0D,CAFzD,cAGC,oBAAC,eAAD,EACE,QAAQ,CAAEJ,aAAa,CAACA,aAAa,CAACI,MAAd,CAAuB,CAAxB,CAAb,CAAwCR,QADpD,CAEE,QAAQ,CAAEE,OAFZ,CAGE,MAAM,CAAED,MAHV,CAIE,IAAI,CAAEI,WAJR,CAKE,WAAW,CAAEF,WALf,EAHD,cAWC,oBAAC,iBAAD,MAZJ,CADF,CAiBD,CAED,cAAeJ,CAAAA,QAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport socketIOClient from \"socket.io-client\";\r\nimport ChatBodyNoMessage from \"./ChatBodyNoMessage\";\r\nimport ChatBodyMessage from \"./ChatBodyMessage\";\r\nimport ChatSideBar from \"./ChatSidebar\";\r\nimport ReactDOM from \"react-dom\";\r\nimport $ from \"jquery\";\r\nconst ENDPOINT = \"http://localhost:5000\";\r\n\r\nfunction ChatBody({ messages, my_uid, clicked, SendMessage }) {\r\n  // const [chatMessages, setChatMessages] = useState([]);\r\n  let messagesArray;\r\n  let currentPage = 0;\r\n\r\n  console.log(clicked);\r\n  // useEffect(() => {\r\n  //   if (clicked != 0) {\r\n  //     const socket = socketIOClient(ENDPOINT);\r\n  //     console.log(\"uid\", clicked);\r\n\r\n  //     socket.on(\"retrieve messages\", (response) => {\r\n  //       setChatMessages((chatMessages) => [...chatMessages, response]);\r\n  //       socket.emit(\"get chats\");\r\n  //       console.log(\"messages\", response);\r\n  //     });\r\n  //     currentPage = currentPage + 1;\r\n  //     socket.emit(\"get messages\", { id: clicked, page: currentPage });\r\n  //   }\r\n  // }, [clicked]);\r\n\r\n  // function SendMessage(event, newMessage, chat_uid) {\r\n  //   event.preventDefault();\r\n\r\n  //   const socket = socketIOClient(ENDPOINT);\r\n  //   if (newMessage.length > 0) {\r\n  //     socket.emit(\"chat message\", { chat: chat_uid, message: newMessage });\r\n  //     socket.emit(\"get chats\");\r\n  //     socket.emit(\"get messages\", { id: chat_uid, page: currentPage });\r\n  //     // setnewMessage(\"\");\r\n  //   }\r\n  // }\r\n\r\n  messagesArray = messages;\r\n  // messages = response.chats;\r\n  // my_uid = response.my_uid;\r\n  // console.log(\"Respuesta\", response);\r\n  return (\r\n    <div className=\"chat\">\r\n      {messagesArray[messagesArray.length - 1] &&\r\n      messagesArray[messagesArray.length - 1].messages &&\r\n      messagesArray[messagesArray.length - 1].messages.length > 0 ? (\r\n        <ChatBodyMessage\r\n          messages={messagesArray[messagesArray.length - 1].messages}\r\n          chat_uid={clicked}\r\n          my_uid={my_uid}\r\n          page={currentPage}\r\n          SendMessage={SendMessage}\r\n        />\r\n      ) : (\r\n        <ChatBodyNoMessage />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatBody;\r\n"]},"metadata":{},"sourceType":"module"}